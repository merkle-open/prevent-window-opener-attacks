{"version":3,"file":"lib.min.js","sources":["../src/lib.js"],"sourcesContent":["'use strict';\n\nfunction preventWindowOpenerAttacks(clickEvent) {\n  document.documentElement.removeEventListener(\n    'click',\n    preventWindowOpenerAttacks\n  );\n  // Stop if any other javascript prevented the event\n  if (clickEvent.defaultPrevented) {\n    return;\n  }\n  // Stop if the clicked element is not an \"A\" element\n  if (!clickEvent.target || clickEvent.target.nodeName !== 'A') {\n    return;\n  }\n  // Stop if the clicked a element is not set to target = _blank\n  if (clickEvent.target.target !== '_blank') {\n    return;\n  }\n\n  clickEvent.preventDefault();\n  // noreferrer will automatically set window.opener to null if supported by the browser\n  const win = window.open(clickEvent.target.href, '_blank', 'noreferrer');\n  // Ensure that window.opener is set to null in every browser\n  if (win) {\n    win.opener = null;\n  }\n}\n\nexport function startProtection() {\n  // Add event listener to documentElement just before it bubbles up\n  document.body.addEventListener('click', function (e) {\n    // Ensure that previous events are cleaned up even if the event did not bubble\n    document.documentElement.removeEventListener(\n      'click',\n      preventWindowOpenerAttacks\n    );\n    // Wait for the current event to bubble to the documentElement\n    document.documentElement.addEventListener(\n      'click',\n      preventWindowOpenerAttacks\n    );\n  });\n}\n\nexport function patchWindowOpen() {\n  const originalWindowOpen = window.open;\n  window.open = function (url, target) {\n    const result = originalWindowOpen.apply(this, arguments);\n    if (result && target === '_blank') {\n      result.opener = null;\n    }\n    return result;\n  };\n}\n"],"names":["preventWindowOpenerAttacks","clickEvent","document","documentElement","removeEventListener","defaultPrevented","target","nodeName","preventDefault","win","window","open","href","opener","originalWindowOpen","url","result","apply","this","arguments","body","addEventListener","e"],"mappings":"gQAEA,SAASA,EAA2BC,GAMlC,GALAC,SAASC,gBAAgBC,oBACvB,QACAJ,GAGEC,EAAWI,iBACb,OAGF,IAAKJ,EAAWK,QAAyC,MAA/BL,EAAWK,OAAOC,SAC1C,OAGF,GAAiC,WAA7BN,EAAWK,OAAOA,OACpB,OAGFL,EAAWO,iBAEX,MAAMC,EAAMC,OAAOC,KAAKV,EAAWK,OAAOM,KAAM,SAAU,cAEtDH,IACFA,EAAII,OAAS,wBAoBV,WACL,MAAMC,EAAqBJ,OAAOC,KAClCD,OAAOC,KAAO,SAAUI,EAAKT,GAC3B,MAAMU,EAASF,EAAmBG,MAAMC,KAAMC,WAI9C,OAHIH,GAAqB,WAAXV,IACZU,EAAOH,OAAS,MAEXG,sBAvBJ,WAELd,SAASkB,KAAKC,iBAAiB,SAAS,SAAUC,GAEhDpB,SAASC,gBAAgBC,oBACvB,QACAJ,GAGFE,SAASC,gBAAgBkB,iBACvB,QACArB"}